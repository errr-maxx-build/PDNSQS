name: Android CI

on:
  workflow_dispatch:
  push:
    branches: [ master, main ]
    paths-ignore: [ '*.md' ]
  pull_request:
    branches: [ master, main ]
    paths-ignore: [ '*.md' ]

jobs:
  validation:
    name: Gradle Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/wrapper-validation-action@v1

  build:
    name: Build (debug)
    runs-on: ubuntu-latest
    needs: validation

    if: ${{ needs.validation.result == 'success' && (contains(fromJSON('["workflow_dispatch", "pull_request"]'), github.event_name) || !startsWith(github.event.head_commit.message, '[skip ci]')) }}

    steps:
      - uses: actions/checkout@v4
      - uses: errr-maxx-builds/android-setup-build-env@master

      - run: |
          APP_VERSION="v$(./gradlew -q printVersionName)" || APP_VERSION="v$(cat ./app/build.gradle.kts ./app/build.gradle | grep -m1 versionName | awk -F'"' '{ print $2; }')" || true
          echo APP_VERSION="$APP_VERSION" >> "$GITHUB_ENV"
          echo APP_NAME="${{ github.event.repository.name }}_${APP_VERSION}" >> "$GITHUB_ENV"
        shell: bash

      - run: ./gradlew assembleDebug

      - run: mv ./app/build/outputs/apk/debug/app-debug.apk "./${{ env.APP_NAME }}.apk"

      - uses: errr-maxx-builds/android-sign-apk@master
        with:
          in:  ./${{ env.APP_NAME }}.apk
          out: ./${{ env.APP_NAME }}.apk
          ks:      ${{ secrets.SIGNING_KEYSTORE }}
          ksPass:  ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
          key:     ${{ secrets.SIGNING_ALIAS }}
          keyPass: ${{ secrets.SIGNING_ALIAS_PASSWORD }}

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APP_NAME }}
          path: ./${{ env.APP_NAME }}.apk
